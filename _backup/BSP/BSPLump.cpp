// BSPLump.cpp: implementation of the CBSPLump class.
//
//////////////////////////////////////////////////////////////////////

#include "BSPLump.h"
#include <stdio.h>
#include <memory.h>

//////////////////////////////////////////////////////////////////////
// Construction/Destruction
//////////////////////////////////////////////////////////////////////

CBSPLump::CBSPLump()
{
	this->LumpType = 0;
	this->TypeSize = 0;

	this->LumpData = 0;
	this->LumpLength = 0;
}

CBSPLump::~CBSPLump()
{
}

//////////////////////////////////////////////////////////////////////
// Purpose : 
// Input   : 
// Output  : 
//////////////////////////////////////////////////////////////////////
bool CBSPLump::InitData(char* data, int len, int type, int size)
{	
	this->LumpType = type;
	this->TypeSize = size;

	this->LumpData = data;
	this->LumpLength = len;

	return true;
}

//////////////////////////////////////////////////////////////////////
// Purpose : 
// Input   : 
// Output  : 
//////////////////////////////////////////////////////////////////////
int CBSPLump::GetData(char** data)
{
	*data = this->LumpData;

	return this->LumpLength;
}

//////////////////////////////////////////////////////////////////////
// Purpose : 
// Input   : 
// Output  : 
//////////////////////////////////////////////////////////////////////
int CBSPLump::GetItemCount()
{
	return (this->LumpLength / this->TypeSize);
}

//////////////////////////////////////////////////////////////////////
// Purpose : 
// Input   : 
// Output  : 
//////////////////////////////////////////////////////////////////////
int CBSPLump::GetTypeSize()
{
	return this->TypeSize;
}

//////////////////////////////////////////////////////////////////////
// Purpose : 
// Input   : 
// Output  : 
//////////////////////////////////////////////////////////////////////
char* CBSPLump::GetItem(int index)
{
	char* res = 0;
	
	if ((index * this->TypeSize) < this->LumpLength)
		res = this->LumpData + (index * this->TypeSize);

	return res;
}