cmake_minimum_required(VERSION 3.1)

project(HLLoader)

find_package(OpenGL REQUIRED)

add_executable(HLLoader
    CApplication.cpp
    CApplication.h
    CWin.cpp
    CWin.h
    FileLoader.cpp
    FileLoader.h
    Keys.cpp
    Keys.h
    ThreeD.cpp
    ThreeD.h
    WinMain.cpp
    WtrCamera.cpp
    WtrCamera.h
    WtrEngine.cpp
    WtrEngine.h
    BSP/BSPFile.cpp
    BSP/BSPFile.h
    BSP/BSPLump.cpp
    BSP/BSPLump.h
    BSP/bsptypes.h
    common/BaseFile.cpp
    common/BaseFile.h
    common/ByteContainer.cpp
    common/ByteContainer.h
    common/ByteIterator.cpp
    common/ByteIterator.h
    common/DirectoryFile.cpp
    common/DirectoryFile.h
    common/DirectoryFolder.cpp
    common/DirectoryFolder.h
    common/DirectoryNode.cpp
    common/DirectoryNode.h
    MAP/Debug
    MAP/MAPBrush.cpp
    MAP/MAPBrush.h
    MAP/MAPEntity.cpp
    MAP/MAPEntity.h
    MAP/MAPFace.cpp
    MAP/MAPFace.h
    MAP/MAPFile.cpp
    MAP/MAPFile.h
    MAP/MAPParser.cpp
    MAP/MAPParser.h
    MAP/MAPPropertie.cpp
    MAP/MAPPropertie.h
    MS3D/MS3DFile.cpp
    MS3D/MS3DFile.h
    MS3D/MS3DGroup.cpp
    MS3D/MS3DGroup.h
    MS3D/MS3DJoint.cpp
    MS3D/MS3DJoint.h
    MS3D/MS3DKeyFramePos.cpp
    MS3D/MS3DKeyFramePos.h
    MS3D/MS3DKeyFrameRot.cpp
    MS3D/MS3DKeyFrameRot.h
    MS3D/MS3DMaterial.cpp
    MS3D/MS3DMaterial.h
    MS3D/MS3DObject.cpp
    MS3D/MS3DObject.h
    MS3D/MS3DTriangle.cpp
    MS3D/MS3DTriangle.h
    MS3D/MS3DVertex.cpp
    MS3D/MS3DVertex.h
    RMF/RMF2MS3D.cpp
    RMF/RMF2MS3D.h
    RMF/RMFCorner.cpp
    RMF/RMFCorner.h
    RMF/RMFEntity.cpp
    RMF/RMFEntity.h
    RMF/RMFFace.cpp
    RMF/RMFFace.h
    RMF/RMFFile.cpp
    RMF/RMFFile.h
    RMF/RMFGroup.cpp
    RMF/RMFGroup.h
    RMF/RMFKey.cpp
    RMF/RMFKey.h
    RMF/RMFObject.cpp
    RMF/RMFObject.h
    RMF/RMFPath.cpp
    RMF/RMFPath.h
    RMF/RMFSolid.cpp
    RMF/RMFSolid.h
    RMF/RMFVisGroup.cpp
    RMF/RMFVisGroup.h
    WAD/WADFile.cpp
    WAD/WADFile.h
    WAD/WADLump.cpp
    WAD/WADLump.h
    WAD/WADMiptex.cpp
    WAD/WADMiptex.h
    WAD/wadtypes.h
    _msvc/hl.ico
    _msvc/resource.h
    _msvc/resource.rc
	)

target_link_libraries(HLLoader
    ${OPENGL_LIBRARIES}
    comctl32
    winmm
    )

target_compile_features(HLLoader
	PRIVATE cxx_auto_type
	PRIVATE cxx_nullptr
	PRIVATE cxx_range_for
	)
